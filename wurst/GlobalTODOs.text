// -------------
// Symbol legend:
// -------------

Task priority:
"!!!!-" = Blocker
"!!!-" = Critical
"!!-" = Major
"!-" = Minor
"- ((" = Probably not needed

Work status:
"-" = Queued
">-" = Analysis
">>-" = Implementation
">>>-" = Testing


// -------------
// Worklog:
// -------------

!!>>- Create a SettlementSystem
	- Write unit tests
	- A settlement can only level up if it has a specific population count
	- What should happen to buildings in a settlement if the settlement gets destroyed? How to handle the population?


// -------------
// Backlog:
// -------------

!!- Create a NatureSystem that controlls plant and animal growth and reproduction
!!- Building buff graphics isn't visible (buff is added correctly)
!!- Find solution for Array2D to avoid generating that many code for the array -> Classes only allow sized arrays as members
!!- Reorder ability positions (e.g. for peasant)
!!- Create a hero option unit for ShowTargetInfo and other globals abilities
!- Create an ExperienceSystem that manages how good persons are in different tasks/jobs
	- Have a level system (apprentice, journeyman, adept, master, expert, ...) that unlocks new abilities or improves them
	- Each work step adds exp for that job
	- To reach the highest job level persons have to work in that for most of their life
!- Add a small storage to homes where food and commodities can be stored by wifes and used by the whole family
!- Maybe for UnitDynamicIndexMap instances with few entires make a version where not the unit index is used directly but a linked custom index related to system to save memory
!- Add a description comment (/** */) to every public class and function
!- Try to improve smart order reaction when harvesting (no overwriting by auto harvest)
!- Create a WeatherSystem
!- Maybe use the PreloadIO package to store/load generated maps into/from a file
!- Maybe take account of building size diameter when calculating max ranges (MAX_AUTO_ORDER_RANGE, MAX_NEAR_BY_RANGE)
!- Maybe have repeating order actions to have less object destruction
!- Add unit tests to all bigger / more complexe systems (Missing systems: AbilitySystem, OrderSystem, PersonSystem, ResourceSystem, Array2D)

INFO: After new Wc3 patch delete blizzard.j and common.j in _build folder for compatibility


// -------------
// Ideas/Concepts:
// -------------

!- Main mechanics:
	- Population management:
		- Population growths on a percentage basis.
		- Increased percentage by high happiness, food, commodities, etc.
		- Reduction by war, famine, sicknesses, etc.
		- Worker placement: Production vs. military vs. trader/logistics vs. explorer vs. science vs. aristocracy etc.
		- Worker classes: How many in lower, middle, higher classes.
	- Settlement management:
		- Each settlement only has a limited amount of resources it can work (settlement range).
		- Lots of settlements required to get all/more resources.
		- Bigger settlements required for higher classes that allow for higher tier tech and wares.
		- Bigger settlements are more defendable than smaller ones.
		- Settlement growth vs. settlement expansion: Which settlements to grow and in which specialization, in which direction to expande and how fast.
	- Resource management:
		- Resource exchange between settlements and military camps/outposts.
		- Backpack carrier vs. wheelbarrow vs. carrier mule vs. chariot vs. ships (of different sizes and speeds) etc.
		- Bigger settlements require more types and amount of resources that they can't all produce by their own.
		- Bigger settlements require more logistic workers per settlement, bigger empires require more logistic workers because of longer routes.
	- Military management:
		- Soldiers are grouped in companies with a base camp or barracks for each that has to be supplied with food, ammunition, etc.
		- Area control: Where to station how many companies.
!- Refine prototype with generated elements on TemperateMap
!- Add more ware types and resources
!- Think about renaming ware to something different (item, good, commodity, article, product, ...)
!- Maybe add a Conventions.text like in C# projects
!- Maybe add a top header entry with name of the selected object to ObjectInfoSystem
!- Maybe show different info for ObjectInfoSystem if multiple units are selected