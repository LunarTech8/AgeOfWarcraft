/*-------------------------------------------------------------
// Version number:
1.0.0

// Description:
Handles the load status process and its readout to the players.

// Changelog:
- 1.0.0:
Initial version.
-------------------------------------------------------------*/
package LoadStatusSystem
import ClosureTimers
import LinkedList


// --------------------
// Data code
// --------------------

let LOAD_STATUS_ADJUSTMENT_RATE = 0.2
let UPDATE_SYMBOLS = ["-", "\\", "|", "/"]


// --------------------
// Functional code
// --------------------

let loadStatusText = new LinkedList<string>()
int loadStatusSymbolIndex = 0
CallbackPeriodic loadStatusCb = null

string currentInitStatus = null
string currentInitSubStatus = null

function updateLoadStatus()
	loadStatusSymbolIndex++
	if loadStatusSymbolIndex >= UPDATE_SYMBOLS.length
		loadStatusSymbolIndex = 0
	while loadStatusText.size() > 1
		print(loadStatusText.dequeue(), LOAD_STATUS_ADJUSTMENT_RATE)
	ClearTextMessages()
	print("[" + UPDATE_SYMBOLS[loadStatusSymbolIndex] + "] " + loadStatusText.getFirst(), LOAD_STATUS_ADJUSTMENT_RATE)

function startLoadStatus()
	if loadStatusCb != null
		Log.error("Cannot start another load status until the current one is finished")
	loadStatusCb = doPeriodically(LOAD_STATUS_ADJUSTMENT_RATE, cb -> updateLoadStatus())

function finishLoadStatus()
	destroy(loadStatusCb)
	loadStatusCb = null
	updateLoadStatus()
	loadStatusText.clear()

/** Start init status with given name and finish current one if existent. Use null to finish initialisation. */
public function newInitStatus(string statusName)
	if currentInitStatus == null
		startLoadStatus()
	else
		loadStatusText.add("Init: Finished " + currentInitStatus)
	currentInitStatus = statusName
	currentInitSubStatus = null
	if currentInitStatus == null
		finishLoadStatus()
	else
		loadStatusText.add("Init: Starting " + currentInitStatus)

/** Start init sub status with given name and finish current one if existent. Use null to finish current sub status. */
public function newInitSubStatus(string subStatusName)
	if currentInitSubStatus != null
		loadStatusText.add("Init: Finished " + currentInitStatus + " - " + currentInitSubStatus)
	currentInitSubStatus = subStatusName
	if currentInitSubStatus != null
		loadStatusText.add("Init: Starting " + currentInitStatus + " - " + currentInitSubStatus)

/** Set init task status to given current count of given max count. */
public function setInitTaskStatus(int currentTask, int maxTasks)
	if currentInitSubStatus != null
		loadStatusText.add("Init: " + currentInitStatus + " - " + currentInitSubStatus + " (" + currentTask.toString() + " / " + maxTasks.toString() + ")")
	else
		loadStatusText.add("Init: " + currentInitStatus + " (" + currentTask.toString() + " / " + maxTasks.toString() + ")")