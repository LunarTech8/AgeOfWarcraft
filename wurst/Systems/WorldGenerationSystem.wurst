/*-------------------------------------------------------------
// Version number:
1.0.0

// Description:
Handles world map generation like terrain deformation and unit placement.

// Changelog:
- 1.0.0:
Initial version.
-------------------------------------------------------------*/
package WorldGenerationSystem
import TerrainUtils
import Interpolation
import Array2D
import ConstantDataSystem
import UtilityFunctions


// --------------------
// Data code
// --------------------

// Terrain:
let TILES_X = 12
let TILES_Y = 12
let TILE_DISTANCE = 128.
// INFO: Min height is -64.; Min above water height is 181.5
let MIN_TERRAIN_HEIGHT = 128.  // Min addition to start height
let MAX_TERRAIN_HEIGHT = 384.  // Max addition to start height
let ORIGIN_VEC = vec2(-2048., -2048.)  // Left, bottom point from which the terrain generation starts towards right, top point

// Nature:
let NATURE_PLAYER = Player(PLAYER_NEUTRAL_PASSIVE)


// --------------------
// Functional code
// --------------------

public function generateTerrain()
    let heightMap = generatePerlinNoise(TILES_X, TILES_Y, 5, 0.6, "Cosine")
    for	x = 0 to TILES_X - 1
        for	y = 0 to TILES_Y - 1
            ORIGIN_VEC.add(x * TILE_DISTANCE, y * TILE_DISTANCE).addTerrainHeight(linear(MIN_TERRAIN_HEIGHT, MAX_TERRAIN_HEIGHT, heightMap.get(x, y)))  // Terrain has to have water on it before hand for it to show up
    // FIXME: pathing has to be updatet manually to allow building on above water ground

public function generatePlants()
    let treeMap = generatePerlinNoise(TILES_X, TILES_Y, 5, 0.6, "Cosine")
    for	x = 0 to TILES_X - 1
        for	y = 0 to TILES_Y - 1
            if treeMap.get(x, y) >= GetRandomReal(0., 1.)
                let v = ORIGIN_VEC + vec2(x + GetRandomReal(-0.5, 0.5), y + GetRandomReal(-0.5, 0.5)) * TILE_DISTANCE
                createUnit(NATURE_PLAYER, UnitIdsCustom.Trees.beech.getUnitTypeId(), v, getRandomAngle())